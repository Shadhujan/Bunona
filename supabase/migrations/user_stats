create table public.user_stats (
  user_id uuid not null,
  current_score integer null default 0,
  best_score integer null default 0,
  total_games integer null default 0,
  games_won integer null default 0,
  games_lost integer null default 0,
  win_loss_ratio numeric null default 0.0,
  last_played_at timestamp with time zone null,
  updated_at timestamp with time zone null default now(),
  username text null,
  constraint user_stats_pkey primary key (user_id),
  constraint user_stats_user_id_fkey foreign KEY (user_id) references profiles (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists user_stats_best_score_idx on public.user_stats using btree (best_score desc) TABLESPACE pg_default;

create index IF not exists user_stats_last_played_idx on public.user_stats using btree (last_played_at desc) TABLESPACE pg_default;

create index IF not exists user_stats_win_loss_ratio_idx on public.user_stats using btree (win_loss_ratio desc) TABLESPACE pg_default;

-- ** RLC Policy **

--For Select
create policy "Public leaderboard view"
on "public"."user_stats"
to public
using (
  true
);
--For All
create policy "System can update user stats"
on "public"."user_stats"
to authenticated
using (
  (auth.uid() = user_id)
)with check (
  (auth.uid() = user_id)
);
--For Select
create policy "Users can view own stats"
on "public"."user_stats"
to authenticated
using (
  (auth.uid() = user_id)
);

