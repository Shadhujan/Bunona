create table public.profiles (
  id uuid not null,
  username text not null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint profiles_pkey primary key (id),
  constraint profiles_username_key unique (username),
  constraint profiles_id_fkey foreign KEY (id) references auth.users (id) on delete CASCADE
) TABLESPACE pg_default;

create trigger on_profile_created
after INSERT on profiles for EACH row
execute FUNCTION initialize_user_stats ();

create trigger trg_sync_username_on_profiles
after INSERT
or
update OF username on profiles for EACH row
execute FUNCTION sync_username_to_user_stats ();


-- ** RLC Policy **

--For Insert
create policy "Enable insert for authenticated users"
on "public"."profiles"
to authenticated
with check (
  (auth.uid() = id)
);
--For Select
create policy "Enable select for authenticated users"
on "public"."profiles"
to authenticated
using (
  (auth.uid() = id)
);
-- For Update
create policy "Enable update for users based on id"
on "public"."profiles"
to authenticated
using (
    (auth.uid() = id)
)
with check (
    (auth.uid() = id)
);